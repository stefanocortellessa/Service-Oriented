APPLICATION BACKEND SETUP:

1) download or clone source from https://github.com/stefanocortellessa/Service-Oriented

2) import in Eclipse each directory under Service-Oriented/guidApp_backend/ (es: accountManager, provider, ...) as existing project

3) make sure that all source generated by Maven are available. If not, run the Maven Update command on each project

4) make sure that each project has Maven dependencies enabled. If not, add them manually: right click on project -> properties -> deployment assembly -> add -> java build path entries -> maven dependencies).

5) create guidApp db on MySQL (port 3306 user=root, password=root)

6) populate guidApp db importing the file dump.sql in MySQL

7) deploy projects on servers in the following way:

	- Tomcat 8.5.3 port 8080 -> prosumer; loadBalancer
	- Tomcat 8.5.3 port 8100, port 8110, port 8120 -> accountManager; researchManager; eventManager; 	
	attractionManager; balanceAgent;

8) run servers in the following order:

	- Tomcat 8.5.3 port 8100, port 8110, port 8120
	- Tomcat 8.5.3 port 8080;

   NOTE: run first each server with providers (port 8100, 8110, 8120) and only after that run the server with the prosumer    
   and the loadBalancer (port 8080).

9) run researchManager as Java Application (port 8090)

10) use the mobile client (or execute REST calls using Postman or SoapUI. See the documentation for REST api methods) 

